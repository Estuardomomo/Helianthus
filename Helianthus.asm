DATO  	EQU 0X21
COUNTY 	EQU 0X22
COUNTMINIX 	EQU 0X23
LIMITY 	EQU 0X24
LIMITMINIX 	EQU 0X25
P1	EQU 0X26
P2    	EQU 0X27
COUNTX EQU 0X28
LIMITX EQU 0X29
VARMAXX	EQU	0X30
VARMAXY	EQU	0X31


INICIO

	ORG		0X00
	GOTO	START
;--------------------DEFINIR ENTRADAS Y SALIDAS-----------------------
START
	;En los puertos: 1 -> entra | 0 -> sale
	;BIT SET FILE
	BSF 	STATUS, 5	; COLOCAMOS 1 EN EL BIT 5 DE REG. ESTATUS
	CLRF	TRISB		;Todo B es salida
	CLRF	TRISD		;Todo D es salida
	BCF	STATUS, RP0	;TODOS LOS PINES DE B SON SALIDAS
;----------------INICIALIZAR VARIABLES -------------------------------
	MOVLW	0X00
	MOVWF 	PORTB  		;SET 0 a todas las patas del puerto B
	MOVLW	0X00
	MOVWF 	PORTD  		;SET 0 a todas las patas del puerto D
	MOVLW 	0xFF		;255	
	MOVWF 	LIMITY 		;LIMITY = 255	12|10 
	MOVLW 	0x20		;32	2|0
	MOVWF 	LIMITMINIX		;LIMITMINIX = 32	2|0
	MOVLW	0x10		;16	1|0
	MOVWF	LIMITX	;LIMITX = 16	1|0
	CALL 	LIMPIARY		;CONTADORY = 0
	CALL 	LIMPIARMINIX		;CONTADORMINIX = 0
	CALL 	LIMIPIARX	;CONTADORx = 0
;--------------------------- MAIN -----------------------------------
					
MAIN

	CALL	CICLOMINIX		;Mover en x, analizar y, regresar en y 
	INCF	COUNTX,1	;COUNTX++
	MOVF	LIMITX, W	;W = LIMITX
	SUBWF	COUNTX, w	;W = LIMITX - COUNTX
	BTFSS	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO	MAIN		;REPETIR HASTA QUE COUNTX = LIMITX
	CALL	LIMIPIARX	;COUNTX = 0
	CALL 	CICLOXREVERSA
	GOTO 	END

;---------------------------CICLOS-------------------------------------
CICLOXREVERSA
	CALL 	CICLOMINIXREVERSA	;REGRESAR TODO EN X PARA NO ENREDAR CABLES
	INCF	COUNTX,1	;COUNTX++
	MOVF	LIMITX, W	;W = LIMITX
	SUBWF	COUNTX, w	;W = LIMITX - COUNTX
	BTFSS	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO	CICLOXREVERSA	;REPETIR HASTA QUE COUNTX = LIMITX
	GOTO 	END		;TERMINAR EL PROGRAMA
CICLOMINIX
	CALL 	EJEX		;ROTA EN EJE X

	
	;MOVE ON X
	INCF	COUNTMINIX,1	;COUNTMINIX++
	MOVF  	LIMITMINIX, w	;W = LIMITMINIX
	SUBWF 	COUNTMINIX,w	;W = W - COUNTMINIX
	BTFSS 	STATUS,Z 	;SALTO SI LA RESTA DIO CERO
	GOTO 	CICLOMINIX		;REPETIR SI COUNTMINIX !=  LIMITMINIX
	CALL	CICLOY 		;MOVERME EN EJE Y y REGRESAR
	CALL 	LIMPIARMINIX		;COUNTMINIX = 0
	RETURN
CICLOY				
	CALL 	EJEY		;ROTAR EN EL EJE Y
	;Cï¿½DIGO PARA COMPARAR Y GUARDAR VALOR DE LA FOTORESISTENCIA-------

	;-----------------------------------------
	;MOVE ON Y
	INCF	COUNTY,1	;COUNTY++ 
	MOVF  	LIMITY, w	;W = LIMITY
	SUBWF 	COUNTY,w	;W = W - COUNTY
	BTFSS 	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO 	CICLOY		;REPETIR SI COUNT !=  LIMITY
	CALL 	LIMPIARY		;COUNTY = 0
	CALL 	CICLOYREVERSA	;REGRESAR Y
	return
CICLOYREVERSA
	CALL 	REVERSEEJEY	;ROTAR EN REVERSA EN EL EJE Y
	INCF	COUNTY,1	;COUNTY++	 
	MOVF  	LIMITY, w	;W = LIMITY
	SUBWF 	COUNTY,w	;W = LIMITY - COUNTY
	BTFSS 	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO 	CICLOYREVERSA	;REPETIR SI COUNTY != LIMITY
	CALL 	LIMPIARY		;COUNTY = 0
	RETURN
CICLOMINIXREVERSA
	CALL 	REVERSEEJEX	;ROTAR EN REVERSA EN EL EJE X
	INCF 	COUNTMINIX,1	;COUNTMINIX++ 
	MOVF  	LIMITMINIX, w	;W = LIMITMINIX
	SUBWF 	COUNTMINIX,w	;W = LIMITMINIX - COUNTMINIX
	BTFSS 	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO 	CICLOMINIXREVERSA	;REPETIR SI COUNTMINIX != LIMITMINIX
	CALL 	LIMPIARMINIX		;COUNTMINIX = 0
	RETURN
;------------------------------RETRASO-------------------------------
RETRASO 			; = 0.0001 segundos
	MOVLW	0xA5	;165
	MOVWF	p1	;pl = 165
ESPERA
	DECFSZ	p1, f	;Decrementar f, saltar si es 0
	GOTO	ESPERA
	RETURN
;-----------LIMPIAR CONTADORES-----------------------------------------------
LIMPIARY
	MOVLW 	0x00  
	MOVWF 	COUNTY  
	RETURN
LIMPIARMINIX
	MOVLW 	0x00  ;se asigna la literal a w (0x00)
	MOVWF 	COUNTMINIX ;muevo w a COUNT 
	RETURN
LIMIPIARX
	MOVLW 	0x00 
	MOVWF 	COUNTX 
	RETURN
;----------------ROTAR EN LOS EJES -----------------------------------------
EJEX
	CALL	MV07
	CALL	MV03
	CALL	MV11
	CALL	MV09
	CALL	MV13
	CALL	MV12
	CALL	MV14
	CALL	MV06
	RETURN
EJEY	
	CALL	MVY7
	CALL	MVY3
	CALL	MVY11
	CALL	MVY9
	CALL	MVY13
	CALL	MVY12
	CALL	MVY14
	CALL	MVY6
	RETURN
REVERSEEJEY
	CALL	MVY6
	CALL	MVY14
	CALL	MVY12
	CALL	MVY13
	CALL	MVY9
	CALL	MVY11	
	CALL	MVY3
	CALL	MVY7
	RETURN
REVERSEEJEX
	CALL  	MV06
	CALL	MV14
	CALL	MV12
	CALL	MV13
	CALL	MV09
	CALL	MV11
	CALL	MV03
	CALL	MV07
	RETURN
;----------------------------MOVIEMIENTOS----------------------------------
MV	
	CALL 	RETRASO		;Retraso de 0.0001 segundos
	MOVF	DATO, W		;W = DATO
	MOVWF	PORTB		;MOVER W AL PUERTO B
	RETURN
MV03
	MOVLW	B'00110000'
	MOVWF	DATO		;DATO = 0|3
	CALL	MV		;MUEVE DATO AL PUERTO B
	RETURN
MV06
	MOVLW	B'01100000'
	MOVWF	DATO		;DATO = 0|6
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV07
	MOVLW	B'01110000'
	MOVWF	DATO		;DATO = 0|7
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV09
	MOVLW	B'10010000'	;DATO = 0|9
	MOVWF	DATO		;MUEVE DATO AL PUERTO D
	CALL	MV
	RETURN
MV11
	MOVLW 	B'10110000'
	MOVWF	DATO
	CALL	MV
	RETURN	
MV12
	MOVLW	B'11000000'
	MOVWF	DATO		;DATO = 0|12
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV13	MOVLW	B'11010000' 
	MOVWF	DATO 
	CALL	MV 
	RETURN

MV14	MOVLW	B'11100000' 
	MOVWF	DATO 
	CALL	MV 
	RETURN

MVY3
	MOVLW	B'00000011'
	MOVWF	DATO		;DATO = 3|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY6
	MOVLW	B'00000110'
	MOVWF	DATO		;DATO = 6|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY7
	MOVLW	B'00000111'
	MOVWF	DATO		;DATO = 7|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY9
	MOVLW	B'00001001'
	MOVWF	DATO		;DATO = 9|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY11	
	MOVLW 	B'00001011'
	MOVWF	DATO
	CALL	MV
	RETURN
MVY12
	MOVLW	B'00001100'
	MOVWF	DATO		;DATO = 12|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN	

MVY13	MOVLW	B'00001101' 
	MOVWF	DATO 
	CALL	MV 
	RETURN

MVY14	MOVLW	B'00001110' 
	MOVWF	DATO 
	CALL	MV 
	RETURN
;-------------------------------------------------------------------------- IR A MAYOR ------------------------


END