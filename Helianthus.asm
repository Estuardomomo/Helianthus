DATO  	EQU 0X21
COUNTY 	EQU 0X22
COUNTX 	EQU 0X23
LIMITY 	EQU 0X24
LIMITX 	EQU 0X25
P1	EQU 0X26
P2    	EQU 0X27
COUNTBETA EQU 0X28
LIMITBETA EQU 0X29
VARMAXX	EQU	0X30
VARMAXY	EQU	0X31

INICIO

	ORG		0X00
	GOTO	START
;--------------------DEFINIR ENTRADAS Y SALIDAS-----------------------
START
	;En los puertos: 1 -> entra | 0 -> sale
	;BIT SET FILE
	BSF 	STATUS, 5	; COLOCAMOS 1 EN EL BIT 5 DE REG. ESTATUS
	CLRF	TRISB		;Todo B es salida
	CLRF	TRISD		;Todo D es salida
	BCF	STATUS, RP0	;TODOS LOS PINES DE B SON SALIDAS
;----------------INICIALIZAR VARIABLES -------------------------------
	MOVLW	0X00
	MOVWF 	PORTB  		;SET 0 a todas las patas del puerto B
	MOVLW	0X00
	MOVWF 	PORTD  		;SET 0 a todas las patas del puerto D
	MOVLW 	0xCA		;202	12|10	
	MOVWF 	LIMITY 		;LIMITY = 202	12|10 
	MOVLW 	0x20		;32	2|0
	MOVWF 	LIMITX		;LIMITX = 32	2|0
	MOVLW	0x10		;16	1|0
	MOVWF	LIMITBETA	;LimitBeta = 16	1|0
	CALL 	CLEANY		;CONTADORY = 0
	CALL 	CLEANX		;CONTADORX = 0
	CALL 	CLEANBETA	;CONTADORBETA = 0
;--------------------------- MAIN -----------------------------------
					
SEARCH

	CALL	LOOPX		;Mover en x, analizar y, regresar en y 
	INCF	COUNTBETA,1	;COUNTBETA++
	MOVF	LIMITBETA, W	;W = LIMITBETA
	SUBWF	COUNTBETA, w	;W = LIMITBETA - COUNTBETA
	BTFSS	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO	SEARCH		;REPETIR HASTA QUE COUNTBETA = LIMITBETA
	CALL	CLEANBETA	;COUNTBETA = 0
	CALL 	LOOPBETA
	GOTO 	END

;---------------------------CICLOS-------------------------------------
LOOPBETA
	CALL 	LOOPXREVERSE	;REGRESAR TODO EN X PARA NO ENREDAR CABLES
	INCF	COUNTBETA,1	;COUNTBETA++
	MOVF	LIMITBETA, W	;W = LIMITBETA
	SUBWF	COUNTBETA, w	;W = LIMITBETA - COUNTBETA
	BTFSS	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO	LOOPBETA	;REPETIR HASTA QUE COUNTBETA = LIMITBETA
	GOTO 	END		;TERMINAR EL PROGRAMA
LOOPX
	CALL 	EJEX		;ROTA EN EJE X

	
	;MOVE ON X
	INCF	COUNTX,1	;COUNTX++
	MOVF  	LIMITX, w	;W = LIMITX
	SUBWF 	COUNTX,w	;W = W - COUNTX
	BTFSS 	STATUS,Z 	;SALTO SI LA RESTA DIO CERO
	GOTO 	LOOPX		;REPETIR SI COUNTX !=  limitx
	CALL	LOOPY 		;MOVERME EN EJE Y y REGRESAR
	CALL 	CLEANX		;COUNTX = 0
	RETURN
LOOPY				
	CALL 	EJEY		;ROTAR EN EL EJE Y
	;CÓDIGO PARA COMPARAR Y GUARDAR VALOR DE LA FOTORESISTENCIA-------

	;-----------------------------------------
	;MOVE ON Y
	INCF	COUNTY,1	;COUNTY++ 
	MOVF  	LIMITY, w	;W = LIMITY
	SUBWF 	COUNTY,w	;W = W - COUNTY
	BTFSS 	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO 	LOOPY		;REPETIR SI COUNT !=  LIMITY
	CALL 	CLEANY		;COUNTY = 0
	CALL 	LOOPYREVERSE	;REGRESAR Y
	return
LOOPYREVERSE
	CALL 	REVERSEEJEY	;ROTAR EN REVERSA EN EL EJE Y
	INCF	COUNTY,1	;COUNTY++	 
	MOVF  	LIMITY, w	;W = LIMITY
	SUBWF 	COUNTY,w	;W = LIMITY - COUNTY
	BTFSS 	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO 	LOOPYREVERSE	;REPETIR SI COUNTY != LIMITY
	CALL 	CLEANY		;COUNTY = 0
	RETURN
LOOPXREVERSE
	CALL 	REVERSEEJEX	;ROTAR EN REVERSA EN EL EJE X
	INCF 	COUNTX,1	;COUNTX++ 
	MOVF  	LIMITX, w	;W = LIMITX
	SUBWF 	COUNTX,w	;W = LIMITX - COUNTX
	BTFSS 	STATUS,Z	;SALTO SI LA RESTA DIO 0
	GOTO 	LOOPXREVERSE	;REPETIR SI COUNTX != LIMITX
	CALL 	CLEANX		;COUNTX = 0
	RETURN
;------------------------------RETRASO-------------------------------
Delay 			; = 0.0001 segundos
	MOVLW	0xA5	;165
	MOVWF	p1	;pl = 165
Delay_0
	DECFSZ	p1, f	;Decrementar f, saltar si es 0
	GOTO	Delay_0
	RETURN
;-----------LIMPIAR CONTADORES-----------------------------------------------
CLEANY
	MOVLW 	0x00  
	MOVWF 	COUNTY  
	RETURN
CLEANX
	MOVLW 	0x00  ;se asigna la literal a w (0x00)
	MOVWF 	COUNTX ;muevo w a COUNT 
	RETURN
CLEANBETA
	MOVLW 	0x00 
	MOVWF 	COUNTBETA 
	RETURN
;----------------ROTAR EN LOS EJES -----------------------------------------
EJEX
	CALL	MV07
	CALL	MV03
	CALL	MV11
	CALL	MV09
	CALL	MV13
	CALL	MV12
	CALL	MV14
	CALL	MV06
	RETURN
EJEY	
	CALL	MVY7
	CALL	MVY3
	CALL	MVY11
	CALL	MVY9
	CALL	MVY13
	CALL	MVY12
	CALL	MVY14
	CALL	MVY6
	RETURN
REVERSEEJEY
	CALL	MVY6
	CALL	MVY14
	CALL	MVY12
	CALL	MVY13
	CALL	MVY9
	CALL	MVY11	
	CALL	MVY3
	CALL	MVY7
	RETURN
REVERSEEJEX
	CALL  	MV09
	CALL	MV03
	CALL	MV06
	CALL	MV12
	RETURN
;----------------------------MOVIEMIENTOS----------------------------------
MV	
	CALL 	DELAY		;Retraso de 0.0001 segundos
	MOVF	DATO, W		;W = DATO
	MOVWF	PORTB		;MOVER W AL PUERTO D
	RETURN
MV01	
	MOVLW	B'00000001'
	MOVWF	DATO		;DATO = 0|1
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV02
	MOVLW	B'00000010'
	MOVWF	DATO		;DATO = 0|2
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV03	
	MOVLW	B'00000011'
	MOVWF	DATO		;DATO = 0|3
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV04
	MOVLW	B'00000100'
	MOVWF	DATO		;DATO = 0|4
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV05
	MOVLW	B'00000101'
	MOVWF	DATO		;DATO = 0|5
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV06
	MOVLW	B'00000110'
	MOVWF	DATO		;DATO = 0|6
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV07
	MOVLW	B'00000111'
	MOVWF	DATO		;DATO = 0|7
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV08
	MOVLW	B'00001000'
	MOVWF	DATO		;DATO = 0|8
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MV09
	MOVLW	B'00001001'	;DATO = 0|9
	MOVWF	DATO		;MUEVE DATO AL PUERTO D
	CALL	MV
	RETURN
MV12
	MOVLW	B'00001100'
	MOVWF	DATO		;DATO = 0|12
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MVy0
	MOVLW	B'00000000'
	MOVWF	DATO		;DATO = 0|0
	CALL	MV		;MUEVE DATO AL PUERTO D
	RETURN
MVY1
	MOVLW	B'00010000'
	MOVWF	DATO		;DATO = 1|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY2
	MOVLW	B'00100000'
	MOVWF	DATO		;DATO = 2|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY3
	MOVLW	B'00110000'
	MOVWF	DATO		;DATO = 3|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY4
	MOVLW	B'01000000'
	MOVWF	DATO		;DATO = 4|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY5
	MOVLW	B'01010000'
	MOVWF	DATO		;DATO = 5|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY6
	MOVLW	B'01100000'
	MOVWF	DATO		;DATO = 6|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY7
	MOVLW	B'01110000'
	MOVWF	DATO		;DATO = 7|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY8
	MOVLW	B'10000000'
	MOVWF	DATO		;DATO = 8|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY9
	MOVLW	B'10010000'
	MOVWF	DATO		;DATO = 9|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
MVY12
	MOVLW	B'11000000'
	MOVWF	DATO		;DATO = 12|0
	CALL	MV		;MUEVE AL PUERTO D
	RETURN
;--------------------------------------------------------------------------
END